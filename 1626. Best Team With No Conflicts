class Solution {
public:
    int bestTeamScore(vector<int>& scores, vector<int>& ages) {
        int n=ages.size();
        vector<pair<int,int>>store;
        for(int i=0;i<n;i++){
            store.push_back({scores[i],ages[i]});
        }
        sort(store.begin(),store.end());
        vector<int>dp;
        for(int i=0;i<n;i++){
            dp.push_back(store[i].first);
        }
        for(int i=0;i<n;i++){
            int age1=store[i].second;
            int score1=store[i].first;
            for(int j=0;j<i;j++){
                int age2=store[j].second;
                int score2=store[j].first;
                if(age1>=age2){
                    dp[i]=max(dp[i],score1+dp[j]);
                }
                
        }
        }
        for(int i:dp){
            cout<<i<<" ";
        }
        //now have to just return the maximum element
        return *max_element(dp.begin(),dp.end());
    }
};
