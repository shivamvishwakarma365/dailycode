class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        //hashmap way
        int n=nums.size();
        unordered_map<int,int>mp;
        for(int i=0;i<n;i++){
            int val=nums[i];
            if(mp.find(val)!=mp.end()){
                int index=mp.find(val)->second;
                if(i-index<=k){
                    return true;
                }else{
                    //if it dosent satisfy the conditions then we have to update it 
                     mp[nums[i]]=i;
                }
               
            }else{
                mp.insert({nums[i],i});
            }
        }
        return false;
    }
};
// using sliding window approach
        int n=nums.size();
        map<int,int>mp;
        int j=0;
        int i=0;
        while(j<n){
            if(j>k){
                mp[nums[i]]--;
                i++;
            }
            if(mp[nums[j]]>0)return true;
            
            mp[nums[j]]++;
            j++;
        }
        return false;
