class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        //using hashmap
        /*
        int n=nums.size();
        int po=n/3;
        unordered_map<int,int>mp;
        for(int i:nums){
            mp[i]++;
        }
        vector<int>ans;
        for(auto it=mp.begin();it!=mp.end();++it){
            if(it->second>po){
                int ele=it->first;
                ans.push_back(ele);
            }
        }
        return ans;
        */
        //using voore voting algo
        int n=nums.size();
        int count1=0;
        int count2=0;
        int num1=-1;
        int num2=-1;
        for(int i=0;i<n;i++){
            if(num1==nums[i]){
                count1++;
            }else if(num2==nums[i]){
                count2++;
            }else if(count1==0){
                num1=nums[i];
                count1=1;
                
            }else if(count2==0){
                num2=nums[i];
                count2=1;
            }else{
                count1--;
                count2--;
            }
        }
        vector<int>ans;
        count1=0;
        count2=0;
        for(int i:nums){
            if(i==num1)count1++;
            else if(i==num2)count2++;
            
        }
        if(count1>n/3)ans.push_back(num1);
        if(count2>n/3)ans.push_back(num2);
        return ans;
        
        
        
    }
};
