class Solution {
public:
     void sub(int i,int k,vector<int>&nums,set<vector<int>>&ans,vector<int>&ds){
        if(i==nums.size()){
            if(k==0){
                ans.insert(ds);
            }
            return;
        }
        //pick up the element
        if(nums[i]<=k){
            ds.push_back(nums[i]);
            sub(i+1,k-nums[i],nums,ans,ds);
            ds.pop_back();
        }
        sub(i+1,k,nums,ans,ds);
        
    }
    
    
    vector<vector<int>> combinationSum2(vector<int>& nums, int target) {
        vector<int>ds;
        sort(nums.begin(),nums.end());
        set<vector<int>>ans;
        vector<vector<int>>res;
        sub(0,target,nums,ans,ds);
        for(auto it=ans.begin();it!=ans.end();it++){
        vector<int>a=*it;
        res.push_back(a);
            }
        return res;
    }
};
