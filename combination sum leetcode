class Solution {
public:
    void sub(int i,int k,vector<int>&nums,vector<vector<int>>&ans,vector<int>&ds){
        if(i==nums.size()){
            if(k==0){
                ans.push_back(ds);
            }
            return;
        }
        //pick up the element
       
        if(nums[i]<=k){
        //take it
            ds.push_back(nums[i]);
            sub(i,k-nums[i],nums,ans,ds);
            //if not then do not pick shit
            ds.pop_back();
        }
        //not take part
        sub(i+1,k,nums,ans,ds);
        
    }
    
    vector<vector<int>> combinationSum(vector<int>& nums, int target) {
        vector<int>ds;
        vector<vector<int>>ans;
        sub(0,target,nums,ans,ds);
        return ans;
    }
    
