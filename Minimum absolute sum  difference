class Solution {
public:
    int minAbsoluteSumDiff(vector<int>& nums1, vector<int>& nums2) {
        int n=nums1.size();
        int m=1e9+7;
        vector<int>diff(n);
       
        int sum=0;
        for(int i=0;i<n;i++){
            diff[i]=abs(nums1[i]-nums2[i]);
            sum=(sum+diff[i])%m;
        }
        
        sort(nums1.begin(),nums1.end());
        vector<int>gay(n);
        for(int i=0;i<n;i++){
            int j=lower_bound(nums1.begin(),nums1.end(),nums2[i])-nums1.begin();
            //did minus nusm1.begin() for getting the pointer answer from the lower bound to 
            //index position answer
            // and as for lower_bound it gives a pointer in return for the number greater than or equal to the 
            //given number with the least difference
            if(j!=0 && j!=n){
                gay[i]=min(abs(nums2[i]-nums1[j]),abs(nums2[i]-nums1[j-1]));
            }else if(j==0){
                gay[i]=abs(nums2[i]-nums1[j]);
            }else if(j==n){
                gay[i]=abs(nums2[i]-nums1[j-1]);
            }
        }
            int kanye=0;
            
            for(int i=0;i<n;i++){
                kanye=max(kanye,abs(diff[i]-gay[i]));
            }
           
        
        return (m+sum-kanye)%m;
        
        
    }
};
