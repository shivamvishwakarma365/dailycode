class Solution {
public:
    bool checkPossibility(vector<int>& nums) {
        int n=nums.size();
        int condition=0;//for having the condition if the changing has been
        //or not
        for(int i=0;i<n-1;i++){
            if(nums[i]<=nums[i+1]){
                continue;
            }
            if(condition==1){
                return false;
            }
         
            //we have to decrease the elements
            if(i==0 || nums[i+1]>=nums[i-1]){//for case like that needs decreasing in between and also for cases like [4,2]as i==0:
                nums[i]=nums[i+1];
            }else{
                nums[i+1]=nums[i];
            }
            condition++;
        
        }
        return true;


    }
};
///////////////////
class Solution:
    def checkPossibility(self, nums: List[int]) -> bool:
        changed=False
        for i in range(len(nums)-1):
            if(nums[i]<=nums[i+1]):
                continue
            if changed:
                return False
            
            if(i==0 or nums[i+1]>=nums[i-1]):
                nums[i]=nums[i+1]
            else:
                nums[i+1]=nums[i]
            changed=True
        return True
