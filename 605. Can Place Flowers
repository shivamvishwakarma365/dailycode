       
      //java 
       int count =0;
        int i=1;
        if(arr.length==1){
            if(arr[0]==0){
                arr[0]=1;
                count++;
            }
        }
        if(arr[0]==0 && arr[1]==0){
            arr[0]=1;
            count++;
        }
        if(arr[arr.length-1]==0 && arr[arr.length-2]==0){
            arr[arr.length-1]=1;
            count++;
        }
        while(i<arr.length-1){
            if(arr[i-1]==0 && arr[i+1]==0 && arr[i]!=1){
                arr[i]=1;
                count++;
                i++;
            }
            else{
                i++;
            }
        }if(count>=n){
            return true;
        }
        return false;
  //python
  
  class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        f=[0]+flowerbed+[0]
        for i in range(1,len(f)-1):
            if(f[i-1]==0 and f[i]==0 and f[i+1]==0):
                f[i]=1
                n-=1
        return n<=0
