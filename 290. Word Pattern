//using a set and a map
class Solution {
public:
    bool wordPattern(string pattern, string s) {
        unordered_map<char,string>mp;
        set<string>st;
        vector<string>ans;
        int n=s.size();
        int i=0;
        string temp="";
        while(i<n){
            if(s[i]==' '){
                ans.push_back(temp);
                temp="";
            }else{
                temp+=s[i];
            }
            i++;
        }
        ans.push_back(temp);
        if(pattern.size()!=ans.size())return false;
        
       
        for(int i=0;i<pattern.size();i++){
            int val=pattern[i];
            if(mp.find(val)!=mp.end()){
                if(mp[val]!=ans[i]){
                    return false;
                }
            }else{
                if(st.count(ans[i])>0){
                    return false;
                }
                mp[pattern[i]]=ans[i];
                st.insert(ans[i]);
            }
        }
        
        return true;
    }
};
//one can use two maps too,one to conatins the rythm and one to track used pattern
