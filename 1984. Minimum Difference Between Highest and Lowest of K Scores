class Solution {
public:
    int minimumDifference(vector<int>& nums, int k) {
        //lets try this using the simple approch
        //trying  the brute force approach
        //this is a sliding window question which has the a fixed window size
        sort(nums.begin(),nums.end());
        
        int result=nums[k-1]-nums[0];//setting the minimum difference
        for(int i=k;i<nums.size();i++){
            result=min(result,nums[i]-nums[i-k+1]);
        }
        return result;

    }
};
//uisng the sliding window approach

//time cokplexity both have the same time andf space 
nlogn time
anf space constant
int diff=INT_MAX;
        sort(nums.begin(),nums.end());
        
        int i=0,j=0;
        
        while(j<nums.size())
        {
            if(j-i+1<k)
            {
                j++;
            }
            
            if(j-i+1==k)
            {
                diff=min(ans,nums[j]-nums[i]);
                i++;
                j++;
            }
        }
               
         return diff;   
