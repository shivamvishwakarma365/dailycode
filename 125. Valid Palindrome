//this solution uses extra space

class Solution {
public:
    bool isequal(int l,int r){
        if(l==r || (l>='A' && l<='Z' && r==l+32) ||(r>='A' && r<='Z' && l==r+32) ){
            return true;
        }
        return false;
    }
    bool isPalindrome(string s) {
        if(s.length()==0)return true;
        vector<int>arr;
        int i=0;
        int n=s.length();
        while(i<n){
            if((s[i]>='A' && s[i]<='Z' )|| (s[i]>='a' && s[i]<='z' )|| (s[i]>='0' && s[i]<='9')){
                arr.push_back(s[i]);
            }
            i++;
        }
        int m=arr.size();
        int l=0;
        int r=m-1;
        while(l<r){
            if(isequal(arr[l],arr[r])==false)return false;
            l++;
            r--;
        }
        return true;
    }
};
//this solution dosen't use extra space
int left = 0, right = s.length()-1;
        while(left<right)
        {
            if(!isalnum(s[left])) left++;
            else if(!isalnum(s[right])) right--;
            else if(tolower(s[left])!=tolower(s[right])) return false;
            else {left++; right--;}
        }
        return true;
 
 
 about isalnum use:
 this is the use:
 isalnum() function in C programming language checks whether the given character is alphanumeric or not
 isalnum() function returns some value. It always returns ‘8’ for all characters except special characters like (#,@,% etc.). 
 It will always return ‘0’ for special characters.
