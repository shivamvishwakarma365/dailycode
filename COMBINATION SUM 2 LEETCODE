class Solution {
public:
     void sub(int ind,int k,vector<int>&nums,vector<vector<int>>&ans,vector<int>&ds){
      
            if(k==0){
                ans.push_back(ds);
                return;
            }
            
        
        for(int i=ind;i<nums.size();i++){
            if(i>ind && nums[i]==nums[i-1]) continue;
            if(nums[i]>k) break;
            ds.push_back(nums[i]);
            sub(i+1,k-nums[i],nums,ans,ds);
            ds.pop_back();
        }
   
        
    }
    
    
    vector<vector<int>> combinationSum2(vector<int>& nums, int target) {
        vector<int>ds;
        sort(nums.begin(),nums.end());
        
        vector<vector<int>>ans;
        sub(0,target,nums,ans,ds);
        return ans;
    }
};
