class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        //solving using hashset
        //this is one of the most optimal solution 
        //thier is a brute way to do it
            //by simply sorting it
            
     unordered_set<int> s(begin(nums), end(nums));
	int longest = 0;
	for(auto& num : s) {
        if(s.count(num - 1)) continue;
		int j = 1;
		while(s.count(num + j)) j++;
		longest = max(longest, j);
	}
	return longest;
        /*
 
        int ao=0;
      
        unordered_set<int>ans;
        for(int i:nums){
            ans.insert(i);
        }
        for(int i=0;i<nums.size();i++){
            if(ans.find(nums[i]-1)==ans.end()){
                int j=nums[i];
                while(ans.find(j)!=ans.end()){
                    j++;
                }
                ao=max(ao,j-nums[i]);
            }
        }
        return ao;
        */
    }
};
